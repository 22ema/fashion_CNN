# -*- coding: utf-8 -*-
"""clothes_train.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p1nG07O9P3dupxKq_OLsKLutPbVb_2pj
"""

import numpy as np
import pandas as pd

from subprocess import check_output
print(check_output(["ls","/content/gdrive/My Drive/input"]).decode("utf8"))

from keras.utils import to_categorical
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split

data_train = pd.read_csv("/content/gdrive/My Drive/input/fashion-mnist_train.csv")
data_test = pd.read_csv("/content/gdrive/My Drive/input/fashion-mnist_train.csv")

img_rows,img_cols = 28,28
input_shape = (img_rows,img_cols,1)

X= np.array(data_train.iloc[:,1:])
y=to_categorical(np.array(data_train.iloc[:,0]))

X_train, X_val,y_train, y_val =train_test_split(X,y,test_size = 0.2, random_state =13)

X_test = np.array(data_test.iloc[:,1:])
y_test = to_categorical(np.array(data_test.iloc[:,0]))

X_train = X_train.reshape(X_train.shape[0],img_rows, img_cols,1)
X_test = X_test.reshape(X_test.shape[0],img_rows, img_cols,1)
X_val = X_val.reshape(X_val.shape[0], img_rows,img_cols,1)

X_train = X_train.astype('float32')
X_test = X_test.astype('float32')
X_val = X_val.astype('float32')

X_train /=255
X_test /=255
X_val /= 255

import keras
from keras.models import Sequential
from keras.layers import Dense, Dropout, Flatten
from keras.layers import Conv2D, MaxPooling2D
from keras.layers.normalization import BatchNormalization

batch_size = 256
num_classes = 10
epochs = 50

img_rows, img_cols =28,28

model = Sequential()
model.add(Conv2D(32,(3,3),activation ='relu',kernel_initializer='he_normal',input_shape=input_shape))
model.add(MaxPooling2D((2,2)))
model.add(Dropout(0.25))

model.add(Conv2D(64,(3,3),activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Dropout(0.25))

model.add(Conv2D(128,(3,3),activation='relu'))
model.add(Dropout(0.4))

model.add(Flatten())
model.add(Dense(128, activation='relu'))
model.add(Dropout(0.3))

model.add(Dense(num_classes, activation='softmax'))

model.compile(loss=keras.losses.categorical_crossentropy, optimizer=keras.optimizers.Adam(),metrics=['accuracy'])

model.summary()

history = model.fit(X_train,y_train,batch_size = batch_size, epochs=epochs,verbose =1,validation_data=(X_val,y_val))

score = model.evaluate(X_test, y_test, verbose=0)

print('Test loss:',score[0])
print('Test accuracy:', score[1])
model.save("/content/gdrive/My Drive/clothes_train.model")

import matplotlib.pyplot as plt
# %matplotlib inline
accuracy = history.history['acc']
val_accuracy = history.history['val_acc']
loss = history.history['loss']
val_loss = history.history['val_loss']
epochs = range(len(accuracy))
plt.plot(epochs, accuracy, 'bo', label='Training accuracy')
plt.plot(epochs, val_accuracy, 'b', label='Validation accuracy')
plt.title('Training and validation accuracy')
plt.legend()
plt.figure()
plt.plot(epochs, loss, 'bo', label='Training loss')
plt.plot(epochs, val_loss, 'b', label='Validation loss')
plt.title('Training and validation loss')
plt.legend()
plt.show()

